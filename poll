#include <stdio.h>
#include <poll.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

int main ( int argc, char** argv ) {

    if ( argc <= 1 ) {

        printf ( "ERROR: too few files!" );
        return 2;

    }

    int *fds = ( int* ) calloc ( argc - 1, sizeof ( int ) );
    int i = 0;
    struct pollfd *pfds = ( struct pollfd* ) calloc ( argc - 1, sizeof ( struct pollfd ) );

    for ( i = 1; i < argc; i++) {

        fds[i - 1] = mkfifo ( argv[i], O_CREAT | 0666 );
        fds[i - 1] = open(argv[i], O_NONBLOCK);
        pfds[i - 1].fd = fds[i - 1];
        pfds[i - 1].events = POLLIN;

    }

    for ( i = 0; i < argc - 1; i++ ) {

        poll ( pfds + i, 1, -1 );
        struct stat stats;
        fstat ( pfds[i].fd, &stats );
        char* buf = ( char* ) calloc ( stats.st_size, sizeof ( char ) );
        read ( pfds[i].fd, buf, stats.st_size );
        write ( STDOUT_FILENO, buf, stats.st_size );
        free ( buf );

    }

    for ( i = 0; i < argc - 1; i++ ) {
            
        close ( pfds[i].fd );

    }
    
    free ( fds );
    free ( pfds );
    
}
